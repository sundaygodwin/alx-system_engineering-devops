#!/usr/bin/env bash
# Create a script that install and configure HAProxy on lb-01 server
# Configure HAProxy to send traffic to web-01 and web-02 servers
# Distribute requests using a roundrobin algorithm
# Make sure that HAProxy can be managed via an init script
# Make sure that your servers are configured with the right hostnames

# Install and configure HAproxy on my lb-01 server.
echo -e "Updating and doing some minor checks...\n"

function install() {
        command -v "$1" &> /dev/null

        #shellcheck disable=SC2181
        if [ $? -ne 0 ]; then
                echo -e "       Installing: $1\n"
                sudo apt-get update -y -qq && \
                        sudo apt-get install -y "$1" -qq
                echo -e "\n"
        else
                echo -e "       ${1} is already installed.\n"
        fi
}

install haproxy #install haproxy

echo -e "\nSetting up some minor stuff.\n"

# backup default server config file
sudo cp /etc/haproxy/haproxy.cfg haproxy_default.backup

server_config=\
"
defaults
  mode http     
  timeout client 15s
  timeout connect 10s
  timeout server 15s
  timeout http-request 10s

frontend sunny-tech-frontend
    bind *:80
    default_backend sunny-tech-backend

backend sunny-tech-backend
    balance roundrobin
    server 473072-web-01 34.227.101.172:80 check
    server 473072-web-02 54.237.100.121:80 check
"

# shellcheck disable=SC2154
echo "$server_config" | sudo dd status=none of=/etc/haproxy/haproxy.cfg

# enable haproxy to be started by init script
echo "ENABLED=1" | sudo dd status=none of=/etc/default/haproxy

echo "configured - Roundrobin On web-01 & web-02"

if [ "$(pgrep -c haproxy)" -le 0 ]; then
        sudo service haproxy start
else
        sudo service haproxy restart
fi

